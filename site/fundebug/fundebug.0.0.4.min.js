!function(e) {
    function t() {
        v = !1
    }
    function n() {
        var e = document.currentScript;
        if (!e && v) {
            var t = document.scripts;
            e = t[t.length - 1]
        }
        return e
    }
    function r(e, t, n) {
        var r = e[t];
        e[t] = n(r)
    }
    function a(e) {
        return "function" != typeof e ? e : (e.__injected__ || (e.__injected__ = function() {
            try {
                return e.apply(this, arguments)
            } catch (e) {
                throw m(e),
                g = !0,
                e
            }
        }
        ),
        e.__injected__)
    }
    function u() {
        return e.location.href.slice(e.location.href.indexOf("?") + 1)
    }
    function i(e) {
        var t = /^[0-9a-z]{64}$/i;
        return !(!e || !e.match(t))
    }
    function o(e) {
        return e ? {
            name: e && e.name,
            message: e && e.message,
            fileName: e && e.fileName || e && e.sourceURL,
            lineNumber: e && e.lineNumber || e && e.line,
            columnNumber: e && e.columnNumber || e && e.column
        } : null
    }
    function c() {
        var e;
        try {
            throw new Error("")
        } catch (t) {
            e = t.stack
        }
        if (e)
            return e = e.replace(/(.*?)fundebug(.*?)\.js(.*)\n?/gm, ""),
            e = e.replace(/^Error\n/g, ""),
            e = "generated-stack:\n" + e
    }
    function s() {
        for (var e, t = [], n = arguments.callee.caller.caller; n && t.length < 10; ) {
            var r = n.toString().match(/function\s*([\w\_$]+)?\s*\(/i);
            e = r && r[1] || "[anonymous]",
            t.push(e),
            n = n.caller
        }
        return "generated-stack:\n" + t.join("\n")
    }
    function m(e) {
        if (e) {
            var t = e.stack;
            t = t.replace(/(.*?)fundebug(.*?)\.js(.*)\n?/gm, "");
            var n = o(e);
            f({
                name: n.name || "uncaught error",
                message: n.message,
                fileName: n.fileName,
                lineNumber: n.lineNumber,
                columnNumber: n.columnNumber,
                stacktrace: t,
                severity: "error",
                type: "uncaught"
            })
        }
    }
    function l(e) {
        var t = [];
        for (var n in e)
            if (e.hasOwnProperty(n)) {
                var r = '"' + n + '":'
                  , a = e[n];
                a && ("object" == typeof a ? r += l(a) : "number" == typeof a ? r += a : r = r + '"' + a.replace(/\n/g, "\\n") + '"',
                t.push(r))
            }
        return "{" + t.join(",") + "}"
    }
    function f(t) {
        if (i(d.getAttribute("apikey") || fundebug.apikey) && fundebug.maxEventNumber && !fundebug.silent) {
            fundebug.maxEventNumber -= 1;
            var n = {
                notifierVersion: "0.0.5",
                userAgent: e.navigator.userAgent,
                locale: e.navigator.language || e.navigator.userLanguage,
                url: e.location.href,
                queryString: u(),
                appVersion: d.getAttribute("appversion") || fundebug.appversion,
                apiKey: d.getAttribute("apikey") || fundebug.apikey,
                releaseStage: d.getAttribute("releasestage") || fundebug.releasestage,
                metaData: t.metaData || fundebug.metaData,
                user: t.user || fundebug.user,
                name: t.name,
                time: (new Date).getTime(),
                message: t.message,
                fileName: t.fileName,
                lineNumber: t.lineNumber,
                columnNumber: t.columnNumber,
                stacktrace: t.stacktrace,
                type: t.type,
                severity: t.severity
            };
            for (var r in n)
                ;
            var a, o = new Image;
            a = "undefined" == typeof JSON ? l(n) : JSON.stringify(n),
            o.src = "https://fundebug.com/javascript?event=" + encodeURIComponent(a)
        }
    }
    e.fundebug = {};
    var g = !1
      , v = "complete" !== document.readyState;
    document.addEventListener ? document.addEventListener("DOMContentLoaded", t, !0) : e.attachEvent("onload", t);
    var d = n();
    fundebug.silent = d.getAttribute("silent") || !1,
    fundebug.maxEventNumber = d.getAttribute("maxEventNumber") || 10,
    r(e, "onerror", function() {
        return function(t, n, r, a, u) {
            if (g)
                return void (g = !1);
            if (0 !== r || !/Script error\.?/.test(t)) {
                void 0 === a && e.event && (a = e.event.errorCharacter);
                var i;
                i = n && n !== e.location.href ? n : null;
                var c = o(u);
                f({
                    message: t,
                    lineNumber: r,
                    columnNumber: a,
                    fileName: i || c && c.fileName,
                    name: c && c.name || "uncaught error",
                    stacktrace: u.stack || s(),
                    severity: "error",
                    type: "uncaught"
                })
            }
        }
    });
    var p = !0;
    if (e.atob) {
        if (e.ErrorEvent)
            try {
                e.ErrorEvent.prototype.hasOwnProperty("error") && (p = !1)
            } catch (e) {}
    } else
        p = !1;
    "EventTarget Window Node ApplicationCache AudioTrackList ChannelMergerNode CryptoOperation EventSource FileReader HTMLUnknownElement IDBDatabase IDBRequest IDBTransaction KeyOperation MediaController MessagePort ModalWindow Notification SVGElementInstance Screen TextTrack TextTrackCue TextTrackList WebSocket WebSocketWorker Worker XMLHttpRequest XMLHttpRequestEventTarget XMLHttpRequestUpload".replace(/\w+/g, function(t) {
        if (p) {
            var n = e[t] && e[t].prototype;
            n && n.hasOwnProperty && n.hasOwnProperty("addEventListener") && (r(n, "addEventListener", function(e) {
                return function(t, n, r, u) {
                    return n && n.handleEvent && (n.handleEvent = a(n.handleEvent)),
                    e.call(this, t, a(n), r, u)
                }
            }),
            r(n, "removeEventListener", function(e) {
                return function(t, n, r) {
                    return e.call(this, t, n, r),
                    e.call(this, t, a(n), r)
                }
            }))
        }
    }),
    fundebug.notify = function(e, t, n) {
        if (e) {
            f({
                name: e || n && n.name,
                message: t || n && n.message,
                severity: n && n.message || "warning",
                stacktrace: c(),
                type: "notification",
                user: n && n.user,
                metaData: n && n.metaData
            })
        }
    }
    ,
    fundebug.notifyError = function(e, t) {
        if (e) {
            var n = o(e);
            f({
                name: n.name || t && t.name || "caught error",
                message: n.message || t && t.message,
                stacktrace: e.stack,
                fileName: n.fileName,
                lineNumber: n.lineNumber,
                columnNumber: n.columnNumber,
                severity: t && t.severity || "error",
                type: "caught",
                user: t && t.user,
                metaData: t && t.metaData
            })
        }
    }
}(window);